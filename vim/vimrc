set incsearch " Show partial search matches
set ignorecase " Ignore search cases 
set wildmenu " Tab completion for menus
set hlsearch " Highlight searches
set number relativenumber " Show relative line numbers
set ruler " Show line number and column at bottom
set scrolloff=1 " When to start showing text when scrolling
set laststatus=2
set backspace=indent,eol,start " Allow backspace to work as expected
set undofile " Keep undo history after closing
set belloff=all
set nocompatible
set noshowmode
set autoindent
set splitbelow
set splitright
syntax on

" General remaps
let mapleader = " " 
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" ===== Plugins =====
call plug#begin('~/.vim/plugged')
" Generally useful plugins
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'preservim/nerdtree'
Plug 'jiangmiao/auto-pairs'
Plug 'alvan/vim-closetag'
Plug 'mattn/emmet-vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'dense-analysis/ale' 
Plug 'sheerun/vim-polyglot'
Plug 'vim-airline/vim-airline'
Plug 'airblade/vim-rooter'

" Go Dev
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
call plug#end()

" Color Themes and Highlighting
" colorscheme gruvbox 

" ==================
" = Plugin Configs =
" ==================

source ~/.dotfiles/vim/coc.vim

" Rooter conifgs
let g:rooter_patterns = ['.git']

" Airline configs
let g:airline#extensions#tabline#enabled = 1

" Emmet configs
let g:user_emmet_leader_key = ','
let g:user_emmet_install_global = 0
autocmd FileType html,css,eelixir EmmetInstall

" Fzf settings
nnoremap <C-p> :Files<CR>
nnoremap <Leader>b :Buffers<CR>
let g:fzf_layout = { 'window': { 'width': 0.8, 'height': 0.8 } }
let $FZF_DEFAULT_OPTS="--ansi --preview-window 'right:60%' --layout reverse --margin=1,4"

" Ale configs
let g:ale_lint_on_text_changed = 'always'
let g:ale_fixers = {'elixir': ['mix_format']}
let g:ale_linters = {'elixir': ['elixir-ls']}
let g:ale_fixers['javascript'] = ['eslint']
let g:ale_fix_on_save = 1

" Closetag default config
" These are the file extensions where this plugin is enabled.
let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.eex'

" ===== Nerdtree default configs =====
" Open Nerdtree when opening a directory in vim
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif

" Open Nerdtree mapping
map <C-n> :NERDTreeToggle<CR>
